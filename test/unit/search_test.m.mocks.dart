// Mocks generated by Mockito 5.4.2 from annotations
// in sanctions_checker/test/unit/search_test.m.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:either_dart/either.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:sanctions_checker/features/document/domain/services/document_storage_service.dart'
    as _i2;
import 'package:sanctions_checker/network/entity/document_dto.b.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DocumentStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentStorageService extends _i1.Mock
    implements _i2.DocumentStorageService {
  @override
  _i3.Future<void> saveDocument(_i4.DocumentDTO? document) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDocument,
          [document],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i5.Either<void, _i4.DocumentDTO>> loadDocument() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadDocument,
          [],
        ),
        returnValue: _i3.Future<_i5.Either<void, _i4.DocumentDTO>>.value(
            _i6.dummyValue<_i5.Either<void, _i4.DocumentDTO>>(
          this,
          Invocation.method(
            #loadDocument,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i5.Either<void, _i4.DocumentDTO>>.value(
                _i6.dummyValue<_i5.Either<void, _i4.DocumentDTO>>(
          this,
          Invocation.method(
            #loadDocument,
            [],
          ),
        )),
      ) as _i3.Future<_i5.Either<void, _i4.DocumentDTO>>);
}
